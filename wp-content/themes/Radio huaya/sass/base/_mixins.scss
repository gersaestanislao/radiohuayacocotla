@use '../base/functions' as fn;

/// Mixin para aplicar media query según breakpoint
/// @group utilidades
/// @param {String} $breakpoint - sm, md, lg o xl
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (width >= 320px) {
      @content;
    }
  }

  @if $breakpoint == sm {
    @media (width >= 420px) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (width >= 768px) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (width >= 1024px) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (width >= 1280px) {
      @content;
    }
  } @else if $breakpoint == xxl {
    @media (width >= 1440px) {
      @content;
    }
  }
}

/// Mixin para centrar con Flexbox
/// @group utilidades
/// @example scss
///   .contenedor {
///     @include flex-center;
///   }
@mixin flex-center {
  align-items: center;
  display: flex;
  justify-content: center;
}

/// Trunca texto con puntos suspensivos
/// @group tipografia
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/// Oculta un elemento visualmente pero accesible para lectores de pantalla
/// @group accesibilidad
/// @access public
@mixin visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/// Clearfix clásico para contener floats
/// @group utilidades
@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

// Animacione
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}
